###################################################################
# Makefile for TCP/IPv4 packet generator (tcp_ip_pg) test bench
# for ModelSim and Questa
#
# Copyright (c) 2021-2024 Simon Southwell.
#
# This file is part of tcpIpPg.
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file. If not, see <http://www.gnu.org/licenses/>.
#
###################################################################

#------------------------------------------------------
# User overridable definitions
#------------------------------------------------------

USRSIMFLAGS        =

# Set to -GFINISH=1 for $finish at execution end, or blank for $stop
# (Verilator generates an error on $stop)
FINISHFLAG         = -GGUI_RUN=0

# Set to --timing for delta cycle support, or -GDISABLE_DELTA for no delta-cycle
TIMINGFLAG         = --timing

# set to -GVCD_DUMP=1 to generate VCD ouput, or blank for none
VCDFLAG            = -GVCD_DUMP=1

# Set to +define+VPROC_BURST_IF for burst interface, or blank for none
BURSTDEF           =

# Set blank to disable tracing (needed for VCD generation)
TRACEFLAG          = --trace

#------------------------------------------------------
# Internal variables
#------------------------------------------------------

#------------------------------------------------------
# Variable for software compilation

VLIB               = $(CURDIR)/libvproc.a

# User files to build, passed into vproc makefile build
USERCODE           = VUserMain0.cpp \
                     VUserMain1.cpp \
                     tcpTest0.cpp   \
                     tcpTest1.cpp   \
                     tcpConnect.cpp

TCPCODE            = tcpIpPg.cpp

# VProc location, relative to this directory
VPROC_TOP          = ../../vproc

# C++ version 20 required for Verilator
CPPSTD             = -std=c++20

# Define the github repository URL for the VProc virtual processor
VPROC_REPO         = https://github.com/wyvernSemi/vproc.git

USRCFLAGS          = "-I$(CURDIR)/../src"

ARCHFLAG           = -m64

# Get OS type
OSTYPE             := $(shell uname)

ifeq (${OSTYPE}, Linux)
  SIMFLAGSSO       = -Wl,-E -lrt -rdynamic
else
  SIMFLAGSSO       = -Wl,-export-all-symbols
endif

# Set up Variables for tools
MAKE_EXE           = make

#------------------------------------------------------
# Variables specific to target simulator
#

SIMTOP             = tb

SIMEXE             = work/V$(SIMTOP)
FILELIST           = files.verilator
SIMFLAGS           = --binary -sv                           \
                     $(TRACEFLAG)                           \
                     $(FINISHFLAG)                          \
                     $(TIMINGFLAG)                          \
                     $(VCDFLAG) $(BURSTDEF)                 \
                     $(USRSIMFLAGS)                         \
                     -Mdir work -I$(VPROC_TOP) -Wno-WIDTH   \
                     --top $(SIMTOP)                        \
                     -MAKEFLAGS "--quiet"                   \
                     -CFLAGS "$(CPPSTD) -Wno-attributes"    \
                     -LDFLAGS "$(SIMFLAGSSO)                \
                     -Wl,-whole-archive -L../ -lvproc -Wl,-no-whole-archive -ldl"


#------------------------------------------------------
# BUILD RULES
#------------------------------------------------------

# Build is dependant on processing makefile in vproc and riscV/iss
all: sysverilog

# Call the vproc make file for it to determine if anything
# needs building.
.PHONY : vproc
vproc: $(VPROC_TOP)
	@$(MAKE_EXE) --no-print-directory           \
                 -f makefile.verilator          \
                 $(MAKEFILEARG)                 \
                 $(VLIB)                        \
                 -C $(VPROC_TOP)/test           \
                 USRFLAGS=$(USRCFLAGS)          \
                 ARCHFLAG=$(ARCHFLAG)           \
                 USRCDIR=$(CURDIR)/src          \
                 USER_C="$(USERCODE)"           \
                 MEM_C="$(TCPCODE)"             \
                 MEMMODELDIR="$(CURDIR)/../src" \
                 TESTDIR=$(CURDIR)

#
# Checkout VProc from github if it doesn't exist at the specified location
#
${VPROC_TOP}:
	git clone $(VPROC_REPO) $(VPROC_TOP) --recursive

# Analyse SystemVerilog files
#.PHONY: sysverilog
sysverilog: vproc
	verilator -F $(FILELIST) $(SIMFLAGS)

#------------------------------------------------------
# EXECUTION RULES
#------------------------------------------------------

run: all
	$(SIMEXE)

rungui: all
	@$(SIMEXE)
	@if [ -e $(WAVESAVEFILE) ]; then                       \
	    gtkwave -a $(WAVESAVEFILE) $(WAVEFILE);            \
	else                                                   \
	    gtkwave $(WAVEFILE);                               \
	fi

gui: rungui

.SILENT:
help:
	@$(info make help          Display this message)
	@$(info make               Build C/C++ and HDL code without running simulation)
	@$(info make run           Build and run batch simulation)
	@$(info make rungui/gui    Build and run GUI simulation)
	@$(info make clean         clean previous build artefacts)

#------------------------------------------------------
# CLEANING RULES
#------------------------------------------------------

clean: $(VPROC_TOP)
	@$(MAKE_EXE) --no-print-directory -f makefile.verilator -C $(VPROC_TOP)/test USER_C="$(USERCODE)" TESTDIR="$(CURDIR)" clean
	@rm -rf $(VLIB) $(VOBJDIR) waves.fst work $(WAVEFILE)
